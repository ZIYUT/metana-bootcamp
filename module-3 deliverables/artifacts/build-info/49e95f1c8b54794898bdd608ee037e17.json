{
	"id": "49e95f1c8b54794898bdd608ee037e17",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"module-3 deliverables/forging_logic_contract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract ForgingLogic is Ownable {\n    IERC1155 public tokenContract;\n\n    constructor(address _tokenContract) Ownable(msg.sender) {\n        tokenContract = IERC1155(_tokenContract);\n    }\n\n    // Token balance function (checks balance of a specific user and token ID)\n    function tokenBalanceOf(address account, uint256 id) external view returns (uint256) {\n        return tokenContract.balanceOf(account, id);\n    }\n\n    // Burn function (always burns 1 token of the specified id)\n    function burn(uint256 id) external {\n        tokenContract.safeTransferFrom(msg.sender, address(this), id, 1, \"\"); // Always burn 1 token\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"module-3 deliverables/forging_logic_contract.sol": {
				"ForgingLogic": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "tokenBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenContract",
							"outputs": [
								{
									"internalType": "contract IERC1155",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"module-3 deliverables/forging_logic_contract.sol\":173:806  contract ForgingLogic is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"module-3 deliverables/forging_logic_contract.sol\":248:361  constructor(address _tokenContract) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"module-3 deliverables/forging_logic_contract.sol\":292:302  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"module-3 deliverables/forging_logic_contract.sol\":339:353  _tokenContract */\n  dup1\n    /* \"module-3 deliverables/forging_logic_contract.sol\":314:327  tokenContract */\n  0x01\n  0x00\n    /* \"module-3 deliverables/forging_logic_contract.sol\":314:354  tokenContract = IERC1155(_tokenContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"module-3 deliverables/forging_logic_contract.sol\":248:361  constructor(address _tokenContract) Ownable(msg.sender) {... */\n  pop\n    /* \"module-3 deliverables/forging_logic_contract.sol\":173:806  contract ForgingLogic is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":932:1051   */\ntag_36:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_22:\n    /* \"#utility.yul\":1289:1313   */\n  tag_40\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_42\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"module-3 deliverables/forging_logic_contract.sol\":173:806  contract ForgingLogic is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"module-3 deliverables/forging_logic_contract.sol\":173:806  contract ForgingLogic is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1702749e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x55a373d6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"module-3 deliverables/forging_logic_contract.sol\":446:591  function tokenBalanceOf(address account, uint256 id) external view returns (uint256) {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"module-3 deliverables/forging_logic_contract.sol\":661:804  function burn(uint256 id) external {... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"module-3 deliverables/forging_logic_contract.sol\":212:241  IERC1155 public tokenContract */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"module-3 deliverables/forging_logic_contract.sol\":446:591  function tokenBalanceOf(address account, uint256 id) external view returns (uint256) {... */\n    tag_12:\n        /* \"module-3 deliverables/forging_logic_contract.sol\":522:529  uint256 */\n      0x00\n        /* \"module-3 deliverables/forging_logic_contract.sol\":548:561  tokenContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"module-3 deliverables/forging_logic_contract.sol\":548:571  tokenContract.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfdd58e\n        /* \"module-3 deliverables/forging_logic_contract.sol\":572:579  account */\n      dup5\n        /* \"module-3 deliverables/forging_logic_contract.sol\":581:583  id */\n      dup5\n        /* \"module-3 deliverables/forging_logic_contract.sol\":548:584  tokenContract.balanceOf(account, id) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap3\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"module-3 deliverables/forging_logic_contract.sol\":541:584  return tokenContract.balanceOf(account, id) */\n      swap1\n      pop\n        /* \"module-3 deliverables/forging_logic_contract.sol\":446:591  function tokenBalanceOf(address account, uint256 id) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"module-3 deliverables/forging_logic_contract.sol\":661:804  function burn(uint256 id) external {... */\n    tag_18:\n        /* \"module-3 deliverables/forging_logic_contract.sol\":706:719  tokenContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"module-3 deliverables/forging_logic_contract.sol\":706:736  tokenContract.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"module-3 deliverables/forging_logic_contract.sol\":737:747  msg.sender */\n      caller\n        /* \"module-3 deliverables/forging_logic_contract.sol\":757:761  this */\n      address\n        /* \"module-3 deliverables/forging_logic_contract.sol\":764:766  id */\n      dup5\n        /* \"module-3 deliverables/forging_logic_contract.sol\":768:769  1 */\n      0x01\n        /* \"module-3 deliverables/forging_logic_contract.sol\":706:774  tokenContract.safeTransferFrom(msg.sender, address(this), id, 1, \"\") */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n        /* \"module-3 deliverables/forging_logic_contract.sol\":661:804  function burn(uint256 id) external {... */\n      pop\n      jump\t// out\n        /* \"module-3 deliverables/forging_logic_contract.sol\":212:241  IERC1155 public tokenContract */\n    tag_20:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_47\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_56\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_26\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_63\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_69:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_71:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_72:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_98\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_71\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_73:\n        /* \"#utility.yul\":641:665   */\n      tag_100\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_72\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_101:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_74:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_103\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_73\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_75:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_76:\n        /* \"#utility.yul\":997:1021   */\n      tag_106\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_75\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_107:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_77:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_109\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_76\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_11:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_112\n      tag_69\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1290:1409   */\n    tag_111:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_113\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_74\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_114\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_77\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_78:\n        /* \"#utility.yul\":1764:1788   */\n      tag_116\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_75\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_14:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_118\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_78\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_17:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_121\n      tag_69\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2105:2224   */\n    tag_120:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_122\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_77\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2424   */\n    tag_79:\n        /* \"#utility.yul\":2392:2395   */\n      0x00\n        /* \"#utility.yul\":2413:2418   */\n      dup2\n        /* \"#utility.yul\":2406:2418   */\n      swap1\n      pop\n        /* \"#utility.yul\":2364:2424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2430:2572   */\n    tag_80:\n        /* \"#utility.yul\":2480:2489   */\n      0x00\n        /* \"#utility.yul\":2513:2566   */\n      tag_125\n        /* \"#utility.yul\":2531:2565   */\n      tag_126\n        /* \"#utility.yul\":2540:2564   */\n      tag_127\n        /* \"#utility.yul\":2558:2563   */\n      dup5\n        /* \"#utility.yul\":2540:2564   */\n      tag_71\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2531:2565   */\n      tag_79\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2513:2566   */\n      tag_71\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2500:2566   */\n      swap1\n      pop\n        /* \"#utility.yul\":2430:2572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2578:2704   */\n    tag_81:\n        /* \"#utility.yul\":2628:2637   */\n      0x00\n        /* \"#utility.yul\":2661:2698   */\n      tag_129\n        /* \"#utility.yul\":2692:2697   */\n      dup3\n        /* \"#utility.yul\":2661:2698   */\n      tag_80\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2648:2698   */\n      swap1\n      pop\n        /* \"#utility.yul\":2578:2704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2710:2852   */\n    tag_82:\n        /* \"#utility.yul\":2776:2785   */\n      0x00\n        /* \"#utility.yul\":2809:2846   */\n      tag_131\n        /* \"#utility.yul\":2840:2845   */\n      dup3\n        /* \"#utility.yul\":2809:2846   */\n      tag_81\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2796:2846   */\n      swap1\n      pop\n        /* \"#utility.yul\":2710:2852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2858:3021   */\n    tag_83:\n        /* \"#utility.yul\":2961:3014   */\n      tag_133\n        /* \"#utility.yul\":3008:3013   */\n      dup2\n        /* \"#utility.yul\":2961:3014   */\n      tag_82\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2956:2959   */\n      dup3\n        /* \"#utility.yul\":2949:3015   */\n      mstore\n        /* \"#utility.yul\":2858:3021   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3027:3281   */\n    tag_22:\n        /* \"#utility.yul\":3136:3140   */\n      0x00\n        /* \"#utility.yul\":3174:3176   */\n      0x20\n        /* \"#utility.yul\":3163:3172   */\n      dup3\n        /* \"#utility.yul\":3159:3177   */\n      add\n        /* \"#utility.yul\":3151:3177   */\n      swap1\n      pop\n        /* \"#utility.yul\":3187:3274   */\n      tag_135\n        /* \"#utility.yul\":3271:3272   */\n      0x00\n        /* \"#utility.yul\":3260:3269   */\n      dup4\n        /* \"#utility.yul\":3256:3273   */\n      add\n        /* \"#utility.yul\":3247:3253   */\n      dup5\n        /* \"#utility.yul\":3187:3274   */\n      tag_83\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3027:3281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3287:3405   */\n    tag_84:\n        /* \"#utility.yul\":3374:3398   */\n      tag_137\n        /* \"#utility.yul\":3392:3397   */\n      dup2\n        /* \"#utility.yul\":3374:3398   */\n      tag_72\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3369:3372   */\n      dup3\n        /* \"#utility.yul\":3362:3399   */\n      mstore\n        /* \"#utility.yul\":3287:3405   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3411:3633   */\n    tag_28:\n        /* \"#utility.yul\":3504:3508   */\n      0x00\n        /* \"#utility.yul\":3542:3544   */\n      0x20\n        /* \"#utility.yul\":3531:3540   */\n      dup3\n        /* \"#utility.yul\":3527:3545   */\n      add\n        /* \"#utility.yul\":3519:3545   */\n      swap1\n      pop\n        /* \"#utility.yul\":3555:3626   */\n      tag_139\n        /* \"#utility.yul\":3623:3624   */\n      0x00\n        /* \"#utility.yul\":3612:3621   */\n      dup4\n        /* \"#utility.yul\":3608:3625   */\n      add\n        /* \"#utility.yul\":3599:3605   */\n      dup5\n        /* \"#utility.yul\":3555:3626   */\n      tag_84\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3411:3633   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3639:3968   */\n    tag_31:\n        /* \"#utility.yul\":3698:3704   */\n      0x00\n        /* \"#utility.yul\":3747:3749   */\n      0x20\n        /* \"#utility.yul\":3735:3744   */\n      dup3\n        /* \"#utility.yul\":3726:3733   */\n      dup5\n        /* \"#utility.yul\":3722:3745   */\n      sub\n        /* \"#utility.yul\":3718:3750   */\n      slt\n        /* \"#utility.yul\":3715:3834   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":3753:3832   */\n      tag_142\n      tag_69\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3715:3834   */\n    tag_141:\n        /* \"#utility.yul\":3873:3874   */\n      0x00\n        /* \"#utility.yul\":3898:3951   */\n      tag_143\n        /* \"#utility.yul\":3943:3950   */\n      dup5\n        /* \"#utility.yul\":3934:3940   */\n      dup3\n        /* \"#utility.yul\":3923:3932   */\n      dup6\n        /* \"#utility.yul\":3919:3941   */\n      add\n        /* \"#utility.yul\":3898:3951   */\n      tag_74\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3888:3951   */\n      swap2\n      pop\n        /* \"#utility.yul\":3844:3961   */\n      pop\n        /* \"#utility.yul\":3639:3968   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3974:4306   */\n    tag_35:\n        /* \"#utility.yul\":4095:4099   */\n      0x00\n        /* \"#utility.yul\":4133:4135   */\n      0x40\n        /* \"#utility.yul\":4122:4131   */\n      dup3\n        /* \"#utility.yul\":4118:4136   */\n      add\n        /* \"#utility.yul\":4110:4136   */\n      swap1\n      pop\n        /* \"#utility.yul\":4146:4217   */\n      tag_145\n        /* \"#utility.yul\":4214:4215   */\n      0x00\n        /* \"#utility.yul\":4203:4212   */\n      dup4\n        /* \"#utility.yul\":4199:4216   */\n      add\n        /* \"#utility.yul\":4190:4196   */\n      dup6\n        /* \"#utility.yul\":4146:4217   */\n      tag_84\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4227:4299   */\n      tag_146\n        /* \"#utility.yul\":4295:4297   */\n      0x20\n        /* \"#utility.yul\":4284:4293   */\n      dup4\n        /* \"#utility.yul\":4280:4298   */\n      add\n        /* \"#utility.yul\":4271:4277   */\n      dup5\n        /* \"#utility.yul\":4227:4299   */\n      tag_78\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3974:4306   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4312:4455   */\n    tag_85:\n        /* \"#utility.yul\":4369:4374   */\n      0x00\n        /* \"#utility.yul\":4400:4406   */\n      dup2\n        /* \"#utility.yul\":4394:4407   */\n      mload\n        /* \"#utility.yul\":4385:4407   */\n      swap1\n      pop\n        /* \"#utility.yul\":4416:4449   */\n      tag_148\n        /* \"#utility.yul\":4443:4448   */\n      dup2\n        /* \"#utility.yul\":4416:4449   */\n      tag_76\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4312:4455   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4461:4812   */\n    tag_39:\n        /* \"#utility.yul\":4531:4537   */\n      0x00\n        /* \"#utility.yul\":4580:4582   */\n      0x20\n        /* \"#utility.yul\":4568:4577   */\n      dup3\n        /* \"#utility.yul\":4559:4566   */\n      dup5\n        /* \"#utility.yul\":4555:4578   */\n      sub\n        /* \"#utility.yul\":4551:4583   */\n      slt\n        /* \"#utility.yul\":4548:4667   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":4586:4665   */\n      tag_151\n      tag_69\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4548:4667   */\n    tag_150:\n        /* \"#utility.yul\":4706:4707   */\n      0x00\n        /* \"#utility.yul\":4731:4795   */\n      tag_152\n        /* \"#utility.yul\":4787:4794   */\n      dup5\n        /* \"#utility.yul\":4778:4784   */\n      dup3\n        /* \"#utility.yul\":4767:4776   */\n      dup6\n        /* \"#utility.yul\":4763:4785   */\n      add\n        /* \"#utility.yul\":4731:4795   */\n      tag_85\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":4721:4795   */\n      swap2\n      pop\n        /* \"#utility.yul\":4677:4805   */\n      pop\n        /* \"#utility.yul\":4461:4812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4818:4903   */\n    tag_86:\n        /* \"#utility.yul\":4863:4870   */\n      0x00\n        /* \"#utility.yul\":4892:4897   */\n      dup2\n        /* \"#utility.yul\":4881:4897   */\n      swap1\n      pop\n        /* \"#utility.yul\":4818:4903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4909:5067   */\n    tag_87:\n        /* \"#utility.yul\":4967:4976   */\n      0x00\n        /* \"#utility.yul\":5000:5061   */\n      tag_155\n        /* \"#utility.yul\":5018:5060   */\n      tag_156\n        /* \"#utility.yul\":5027:5059   */\n      tag_157\n        /* \"#utility.yul\":5053:5058   */\n      dup5\n        /* \"#utility.yul\":5027:5059   */\n      tag_86\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5018:5060   */\n      tag_79\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5000:5061   */\n      tag_75\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4987:5061   */\n      swap1\n      pop\n        /* \"#utility.yul\":4909:5067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5073:5220   */\n    tag_88:\n        /* \"#utility.yul\":5168:5213   */\n      tag_159\n        /* \"#utility.yul\":5207:5212   */\n      dup2\n        /* \"#utility.yul\":5168:5213   */\n      tag_87\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5214   */\n      mstore\n        /* \"#utility.yul\":5073:5220   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5226:5394   */\n    tag_89:\n        /* \"#utility.yul\":5309:5320   */\n      0x00\n        /* \"#utility.yul\":5343:5349   */\n      dup3\n        /* \"#utility.yul\":5338:5341   */\n      dup3\n        /* \"#utility.yul\":5331:5350   */\n      mstore\n        /* \"#utility.yul\":5383:5387   */\n      0x20\n        /* \"#utility.yul\":5378:5381   */\n      dup3\n        /* \"#utility.yul\":5374:5388   */\n      add\n        /* \"#utility.yul\":5359:5388   */\n      swap1\n      pop\n        /* \"#utility.yul\":5226:5394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5400:5514   */\n    tag_90:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5520:5882   */\n    tag_91:\n        /* \"#utility.yul\":5661:5664   */\n      0x00\n        /* \"#utility.yul\":5682:5747   */\n      tag_163\n        /* \"#utility.yul\":5745:5746   */\n      0x00\n        /* \"#utility.yul\":5740:5743   */\n      dup4\n        /* \"#utility.yul\":5682:5747   */\n      tag_89\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5675:5747   */\n      swap2\n      pop\n        /* \"#utility.yul\":5756:5849   */\n      tag_164\n        /* \"#utility.yul\":5845:5848   */\n      dup3\n        /* \"#utility.yul\":5756:5849   */\n      tag_90\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":5874:5875   */\n      0x00\n        /* \"#utility.yul\":5869:5872   */\n      dup3\n        /* \"#utility.yul\":5865:5876   */\n      add\n        /* \"#utility.yul\":5858:5876   */\n      swap1\n      pop\n        /* \"#utility.yul\":5520:5882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6763   */\n    tag_42:\n        /* \"#utility.yul\":6173:6177   */\n      0x00\n        /* \"#utility.yul\":6211:6214   */\n      0xa0\n        /* \"#utility.yul\":6200:6209   */\n      dup3\n        /* \"#utility.yul\":6196:6215   */\n      add\n        /* \"#utility.yul\":6188:6215   */\n      swap1\n      pop\n        /* \"#utility.yul\":6225:6296   */\n      tag_166\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6282:6291   */\n      dup4\n        /* \"#utility.yul\":6278:6295   */\n      add\n        /* \"#utility.yul\":6269:6275   */\n      dup8\n        /* \"#utility.yul\":6225:6296   */\n      tag_84\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":6306:6378   */\n      tag_167\n        /* \"#utility.yul\":6374:6376   */\n      0x20\n        /* \"#utility.yul\":6363:6372   */\n      dup4\n        /* \"#utility.yul\":6359:6377   */\n      add\n        /* \"#utility.yul\":6350:6356   */\n      dup7\n        /* \"#utility.yul\":6306:6378   */\n      tag_84\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":6388:6460   */\n      tag_168\n        /* \"#utility.yul\":6456:6458   */\n      0x40\n        /* \"#utility.yul\":6445:6454   */\n      dup4\n        /* \"#utility.yul\":6441:6459   */\n      add\n        /* \"#utility.yul\":6432:6438   */\n      dup6\n        /* \"#utility.yul\":6388:6460   */\n      tag_78\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":6470:6550   */\n      tag_169\n        /* \"#utility.yul\":6546:6548   */\n      0x60\n        /* \"#utility.yul\":6535:6544   */\n      dup4\n        /* \"#utility.yul\":6531:6549   */\n      add\n        /* \"#utility.yul\":6522:6528   */\n      dup5\n        /* \"#utility.yul\":6470:6550   */\n      tag_88\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":6598:6607   */\n      dup2\n        /* \"#utility.yul\":6592:6596   */\n      dup2\n        /* \"#utility.yul\":6588:6608   */\n      sub\n        /* \"#utility.yul\":6582:6585   */\n      0x80\n        /* \"#utility.yul\":6571:6580   */\n      dup4\n        /* \"#utility.yul\":6567:6586   */\n      add\n        /* \"#utility.yul\":6560:6609   */\n      mstore\n        /* \"#utility.yul\":6626:6756   */\n      tag_170\n        /* \"#utility.yul\":6751:6755   */\n      dup2\n        /* \"#utility.yul\":6626:6756   */\n      tag_91\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6618:6756   */\n      swap1\n      pop\n        /* \"#utility.yul\":5888:6763   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cab299aaf1a346f32b8cd83743a6d0473eed59af0de4c51b9b371d946639475564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_337": {
									"entryPoint": null,
									"id": 337,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 248,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1551:5",
										"nodeType": "YulBlock",
										"src": "0:1551:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "922:274:5",
													"nodeType": "YulBlock",
													"src": "922:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:5",
																"nodeType": "YulBlock",
																"src": "968:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:5"
																			},
																			"nativeSrc": "970:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:5"
																		},
																		"nativeSrc": "970:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:5"
																		},
																		"nativeSrc": "939:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:5",
																		"nodeType": "YulLiteral",
																		"src": "964:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:5"
																},
																"nativeSrc": "935:32:5",
																"nodeType": "YulFunctionCall",
																"src": "935:32:5"
															},
															"nativeSrc": "932:119:5",
															"nodeType": "YulIf",
															"src": "932:119:5"
														},
														{
															"nativeSrc": "1061:128:5",
															"nodeType": "YulBlock",
															"src": "1061:128:5",
															"statements": [
																{
																	"nativeSrc": "1076:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:5"
																				},
																				"nativeSrc": "1147:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:5"
																		},
																		"nativeSrc": "1115:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:5",
														"nodeType": "YulTypedName",
														"src": "892:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:5",
														"nodeType": "YulTypedName",
														"src": "903:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													}
												],
												"src": "845:351:5"
											},
											{
												"body": {
													"nativeSrc": "1267:53:5",
													"nodeType": "YulBlock",
													"src": "1267:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:5"
																		},
																		"nativeSrc": "1289:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:5"
																},
																"nativeSrc": "1277:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:5"
															},
															"nativeSrc": "1277:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:5",
														"nodeType": "YulTypedName",
														"src": "1255:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:5",
														"nodeType": "YulTypedName",
														"src": "1262:3:5",
														"type": ""
													}
												],
												"src": "1202:118:5"
											},
											{
												"body": {
													"nativeSrc": "1424:124:5",
													"nodeType": "YulBlock",
													"src": "1424:124:5",
													"statements": [
														{
															"nativeSrc": "1434:26:5",
															"nodeType": "YulAssignment",
															"src": "1434:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:5"
																},
																"nativeSrc": "1442:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:5"
																		},
																		"nativeSrc": "1523:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:5"
																},
																"nativeSrc": "1470:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:5"
															},
															"nativeSrc": "1470:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:5",
														"nodeType": "YulTypedName",
														"src": "1396:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:5",
														"nodeType": "YulTypedName",
														"src": "1408:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:5",
														"nodeType": "YulTypedName",
														"src": "1419:4:5",
														"type": ""
													}
												],
												"src": "1326:222:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610a36380380610a3683398181016040528101906100319190610217565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100999190610251565b60405180910390fd5b6100b1816100f860201b60201c565b508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061026a565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101e6826101bd565b9050919050565b6101f6816101dc565b8114610200575f80fd5b50565b5f81519050610211816101ed565b92915050565b5f6020828403121561022c5761022b6101b9565b5b5f61023984828501610203565b91505092915050565b61024b816101dc565b82525050565b5f6020820190506102645f830184610242565b92915050565b6107bf806102775f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c80631702749e1461006457806342966c681461009457806355a373d6146100b0578063715018a6146100ce5780638da5cb5b146100d8578063f2fde38b146100f6575b5f80fd5b61007e60048036038101906100799190610509565b610112565b60405161008b9190610556565b60405180910390f35b6100ae60048036038101906100a9919061056f565b6101b5565b005b6100b8610246565b6040516100c591906105f5565b60405180910390f35b6100d661026b565b005b6100e061027e565b6040516100ed919061061d565b60405180910390f35b610110600480360381019061010b9190610636565b6102a5565b005b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e84846040518363ffffffff1660e01b815260040161016e929190610661565b602060405180830381865afa158015610189573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101ad919061069c565b905092915050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a33308460016040518563ffffffff1660e01b81526004016102169493929190610733565b5f604051808303815f87803b15801561022d575f80fd5b505af115801561023f573d5f803e3d5ffd5b5050505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610273610329565b61027c5f6103b0565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102ad610329565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361031d575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610314919061061d565b60405180910390fd5b610326816103b0565b50565b610331610471565b73ffffffffffffffffffffffffffffffffffffffff1661034f61027e565b73ffffffffffffffffffffffffffffffffffffffff16146103ae57610372610471565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016103a5919061061d565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104a58261047c565b9050919050565b6104b58161049b565b81146104bf575f80fd5b50565b5f813590506104d0816104ac565b92915050565b5f819050919050565b6104e8816104d6565b81146104f2575f80fd5b50565b5f81359050610503816104df565b92915050565b5f806040838503121561051f5761051e610478565b5b5f61052c858286016104c2565b925050602061053d858286016104f5565b9150509250929050565b610550816104d6565b82525050565b5f6020820190506105695f830184610547565b92915050565b5f6020828403121561058457610583610478565b5b5f610591848285016104f5565b91505092915050565b5f819050919050565b5f6105bd6105b86105b38461047c565b61059a565b61047c565b9050919050565b5f6105ce826105a3565b9050919050565b5f6105df826105c4565b9050919050565b6105ef816105d5565b82525050565b5f6020820190506106085f8301846105e6565b92915050565b6106178161049b565b82525050565b5f6020820190506106305f83018461060e565b92915050565b5f6020828403121561064b5761064a610478565b5b5f610658848285016104c2565b91505092915050565b5f6040820190506106745f83018561060e565b6106816020830184610547565b9392505050565b5f81519050610696816104df565b92915050565b5f602082840312156106b1576106b0610478565b5b5f6106be84828501610688565b91505092915050565b5f819050919050565b5f6106ea6106e56106e0846106c7565b61059a565b6104d6565b9050919050565b6106fa816106d0565b82525050565b5f82825260208201905092915050565b50565b5f61071e5f83610700565b915061072982610710565b5f82019050919050565b5f60a0820190506107465f83018761060e565b610753602083018661060e565b6107606040830185610547565b61076d60608301846106f1565b818103608083015261077e81610713565b90509594505050505056fea2646970667358221220cab299aaf1a346f32b8cd83743a6d0473eed59af0de4c51b9b371d946639475564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA36 CODESIZE SUB DUP1 PUSH2 0xA36 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x217 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0xF8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x26A JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6 DUP3 PUSH2 0x1BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F6 DUP2 PUSH2 0x1DC JUMP JUMPDEST DUP2 EQ PUSH2 0x200 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x211 DUP2 PUSH2 0x1ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C JUMPI PUSH2 0x22B PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x239 DUP5 DUP3 DUP6 ADD PUSH2 0x203 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x1DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x264 PUSH0 DUP4 ADD DUP5 PUSH2 0x242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7BF DUP1 PUSH2 0x277 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1702749E EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x55A373D6 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x509 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0x26B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0 PUSH2 0x27E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E SWAP3 SWAP2 SWAP1 PUSH2 0x661 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x189 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A CALLER ADDRESS DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x216 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x733 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x329 JUMP JUMPDEST PUSH2 0x27C PUSH0 PUSH2 0x3B0 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x329 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x31D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x3B0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x331 PUSH2 0x471 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x34F PUSH2 0x27E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3AE JUMPI PUSH2 0x372 PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4A5 DUP3 PUSH2 0x47C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B5 DUP2 PUSH2 0x49B JUMP JUMPDEST DUP2 EQ PUSH2 0x4BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4D0 DUP2 PUSH2 0x4AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E8 DUP2 PUSH2 0x4D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x503 DUP2 PUSH2 0x4DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0x478 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x52C DUP6 DUP3 DUP7 ADD PUSH2 0x4C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x53D DUP6 DUP3 DUP7 ADD PUSH2 0x4F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x550 DUP2 PUSH2 0x4D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x569 PUSH0 DUP4 ADD DUP5 PUSH2 0x547 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x584 JUMPI PUSH2 0x583 PUSH2 0x478 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x591 DUP5 DUP3 DUP6 ADD PUSH2 0x4F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5BD PUSH2 0x5B8 PUSH2 0x5B3 DUP5 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5CE DUP3 PUSH2 0x5A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5DF DUP3 PUSH2 0x5C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EF DUP2 PUSH2 0x5D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x608 PUSH0 DUP4 ADD DUP5 PUSH2 0x5E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x617 DUP2 PUSH2 0x49B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x630 PUSH0 DUP4 ADD DUP5 PUSH2 0x60E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64B JUMPI PUSH2 0x64A PUSH2 0x478 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x658 DUP5 DUP3 DUP6 ADD PUSH2 0x4C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x674 PUSH0 DUP4 ADD DUP6 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x681 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x547 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x696 DUP2 PUSH2 0x4DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B1 JUMPI PUSH2 0x6B0 PUSH2 0x478 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6BE DUP5 DUP3 DUP6 ADD PUSH2 0x688 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6EA PUSH2 0x6E5 PUSH2 0x6E0 DUP5 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FA DUP2 PUSH2 0x6D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x71E PUSH0 DUP4 PUSH2 0x700 JUMP JUMPDEST SWAP2 POP PUSH2 0x729 DUP3 PUSH2 0x710 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x746 PUSH0 DUP4 ADD DUP8 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x753 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x760 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x547 JUMP JUMPDEST PUSH2 0x76D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6F1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x77E DUP2 PUSH2 0x713 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xB2 SWAP10 0xAA CALL LOG3 CHAINID RETURN 0x2B DUP13 0xD8 CALLDATACOPY NUMBER 0xA6 0xD0 SELFBALANCE RETURNDATACOPY 0xED MSIZE 0xAF 0xD 0xE4 0xC5 SHL SWAP12 CALLDATACOPY SAR SWAP5 PUSH7 0x39475564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "173:633:4:-:0;;;248:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;292:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;339:14:4::1;314:13;;:40;;;;;;;;;;;;;;;;;;248:113:::0;173:633;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;173:633:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 809,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_282": {
									"entryPoint": 1137,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 944,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_373": {
									"entryPoint": 437,
									"id": 373,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 638,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 619,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenBalanceOf_353": {
									"entryPoint": 274,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenContract_321": {
									"entryPoint": 582,
									"id": 321,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 677,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC1155_$270_to_t_address_fromStack": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 1843,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1633,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC1155_$270__to_t_address__fromStack_reversed": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 1735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC1155_$270_to_t_address": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint256": {
									"entryPoint": 1744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1144,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 1808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6766:5",
										"nodeType": "YulBlock",
										"src": "0:6766:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "748:87:5",
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nativeSrc": "758:29:5",
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nativeSrc": "767:20:5",
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nativeSrc": "796:33:5",
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nativeSrc": "796:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:5",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:5",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:5",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nativeSrc": "886:32:5",
													"nodeType": "YulBlock",
													"src": "886:32:5",
													"statements": [
														{
															"nativeSrc": "896:16:5",
															"nodeType": "YulAssignment",
															"src": "896:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:5",
																"nodeType": "YulIdentifier",
																"src": "907:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:5",
														"nodeType": "YulTypedName",
														"src": "868:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:5",
														"nodeType": "YulTypedName",
														"src": "878:7:5",
														"type": ""
													}
												],
												"src": "841:77:5"
											},
											{
												"body": {
													"nativeSrc": "967:79:5",
													"nodeType": "YulBlock",
													"src": "967:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:5",
																"nodeType": "YulBlock",
																"src": "1024:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:5"
																			},
																			"nativeSrc": "1026:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:5"
																		},
																		"nativeSrc": "1026:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:5"
																				},
																				"nativeSrc": "997:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:5"
																		},
																		"nativeSrc": "987:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:5"
																},
																"nativeSrc": "980:43:5",
																"nodeType": "YulFunctionCall",
																"src": "980:43:5"
															},
															"nativeSrc": "977:63:5",
															"nodeType": "YulIf",
															"src": "977:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:5",
														"nodeType": "YulTypedName",
														"src": "960:5:5",
														"type": ""
													}
												],
												"src": "924:122:5"
											},
											{
												"body": {
													"nativeSrc": "1104:87:5",
													"nodeType": "YulBlock",
													"src": "1104:87:5",
													"statements": [
														{
															"nativeSrc": "1114:29:5",
															"nodeType": "YulAssignment",
															"src": "1114:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:5"
																},
																"nativeSrc": "1123:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:5"
																},
																"nativeSrc": "1152:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:5"
															},
															"nativeSrc": "1152:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:5",
														"nodeType": "YulTypedName",
														"src": "1082:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:5",
														"nodeType": "YulTypedName",
														"src": "1090:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:5",
														"nodeType": "YulTypedName",
														"src": "1098:5:5",
														"type": ""
													}
												],
												"src": "1052:139:5"
											},
											{
												"body": {
													"nativeSrc": "1280:391:5",
													"nodeType": "YulBlock",
													"src": "1280:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:5",
																"nodeType": "YulBlock",
																"src": "1326:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:5"
																			},
																			"nativeSrc": "1328:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:5"
																		},
																		"nativeSrc": "1328:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:5"
																		},
																		"nativeSrc": "1297:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:5"
																},
																"nativeSrc": "1293:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:5"
															},
															"nativeSrc": "1290:119:5",
															"nodeType": "YulIf",
															"src": "1290:119:5"
														},
														{
															"nativeSrc": "1419:117:5",
															"nodeType": "YulBlock",
															"src": "1419:117:5",
															"statements": [
																{
																	"nativeSrc": "1434:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:5"
																				},
																				"nativeSrc": "1494:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:5"
																		},
																		"nativeSrc": "1473:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:5",
															"nodeType": "YulBlock",
															"src": "1546:118:5",
															"statements": [
																{
																	"nativeSrc": "1561:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:5"
																				},
																				"nativeSrc": "1622:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:5"
																		},
																		"nativeSrc": "1601:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:5",
														"nodeType": "YulTypedName",
														"src": "1242:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:5",
														"nodeType": "YulTypedName",
														"src": "1253:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:5",
														"nodeType": "YulTypedName",
														"src": "1265:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:5",
														"nodeType": "YulTypedName",
														"src": "1273:6:5",
														"type": ""
													}
												],
												"src": "1197:474:5"
											},
											{
												"body": {
													"nativeSrc": "1742:53:5",
													"nodeType": "YulBlock",
													"src": "1742:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:5"
																		},
																		"nativeSrc": "1764:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:5"
																},
																"nativeSrc": "1752:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:5"
															},
															"nativeSrc": "1752:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:5",
														"nodeType": "YulTypedName",
														"src": "1730:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:5",
														"nodeType": "YulTypedName",
														"src": "1737:3:5",
														"type": ""
													}
												],
												"src": "1677:118:5"
											},
											{
												"body": {
													"nativeSrc": "1899:124:5",
													"nodeType": "YulBlock",
													"src": "1899:124:5",
													"statements": [
														{
															"nativeSrc": "1909:26:5",
															"nodeType": "YulAssignment",
															"src": "1909:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:5"
																},
																"nativeSrc": "1917:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:5"
																		},
																		"nativeSrc": "1998:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1945:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:5"
																},
																"nativeSrc": "1945:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:5"
															},
															"nativeSrc": "1945:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:5",
														"nodeType": "YulTypedName",
														"src": "1871:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:5",
														"nodeType": "YulTypedName",
														"src": "1883:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:5",
														"nodeType": "YulTypedName",
														"src": "1894:4:5",
														"type": ""
													}
												],
												"src": "1801:222:5"
											},
											{
												"body": {
													"nativeSrc": "2095:263:5",
													"nodeType": "YulBlock",
													"src": "2095:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2141:83:5",
																"nodeType": "YulBlock",
																"src": "2141:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2143:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:5"
																			},
																			"nativeSrc": "2143:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:5"
																		},
																		"nativeSrc": "2143:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2116:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2125:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2112:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:5"
																		},
																		"nativeSrc": "2112:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2137:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2108:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:5"
																},
																"nativeSrc": "2108:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2108:32:5"
															},
															"nativeSrc": "2105:119:5",
															"nodeType": "YulIf",
															"src": "2105:119:5"
														},
														{
															"nativeSrc": "2234:117:5",
															"nodeType": "YulBlock",
															"src": "2234:117:5",
															"statements": [
																{
																	"nativeSrc": "2249:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2263:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2253:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:5"
																				},
																				"nativeSrc": "2309:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2288:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:5"
																		},
																		"nativeSrc": "2288:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2278:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2029:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2065:9:5",
														"nodeType": "YulTypedName",
														"src": "2065:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2076:7:5",
														"nodeType": "YulTypedName",
														"src": "2076:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2088:6:5",
														"nodeType": "YulTypedName",
														"src": "2088:6:5",
														"type": ""
													}
												],
												"src": "2029:329:5"
											},
											{
												"body": {
													"nativeSrc": "2396:28:5",
													"nodeType": "YulBlock",
													"src": "2396:28:5",
													"statements": [
														{
															"nativeSrc": "2406:12:5",
															"nodeType": "YulAssignment",
															"src": "2406:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "2413:5:5",
																"nodeType": "YulIdentifier",
																"src": "2413:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2406:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2406:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2364:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2382:5:5",
														"nodeType": "YulTypedName",
														"src": "2382:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2392:3:5",
														"nodeType": "YulTypedName",
														"src": "2392:3:5",
														"type": ""
													}
												],
												"src": "2364:60:5"
											},
											{
												"body": {
													"nativeSrc": "2490:82:5",
													"nodeType": "YulBlock",
													"src": "2490:82:5",
													"statements": [
														{
															"nativeSrc": "2500:66:5",
															"nodeType": "YulAssignment",
															"src": "2500:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2558:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2558:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2540:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2540:17:5"
																				},
																				"nativeSrc": "2540:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2540:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2531:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "2531:8:5"
																		},
																		"nativeSrc": "2531:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2531:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2513:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2513:17:5"
																},
																"nativeSrc": "2513:53:5",
																"nodeType": "YulFunctionCall",
																"src": "2513:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2500:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2500:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2430:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2470:5:5",
														"nodeType": "YulTypedName",
														"src": "2470:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2480:9:5",
														"nodeType": "YulTypedName",
														"src": "2480:9:5",
														"type": ""
													}
												],
												"src": "2430:142:5"
											},
											{
												"body": {
													"nativeSrc": "2638:66:5",
													"nodeType": "YulBlock",
													"src": "2638:66:5",
													"statements": [
														{
															"nativeSrc": "2648:50:5",
															"nodeType": "YulAssignment",
															"src": "2648:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2692:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2692:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2661:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2661:30:5"
																},
																"nativeSrc": "2661:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2661:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2648:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2648:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2578:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2618:5:5",
														"nodeType": "YulTypedName",
														"src": "2618:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2628:9:5",
														"nodeType": "YulTypedName",
														"src": "2628:9:5",
														"type": ""
													}
												],
												"src": "2578:126:5"
											},
											{
												"body": {
													"nativeSrc": "2786:66:5",
													"nodeType": "YulBlock",
													"src": "2786:66:5",
													"statements": [
														{
															"nativeSrc": "2796:50:5",
															"nodeType": "YulAssignment",
															"src": "2796:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2840:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2840:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2809:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2809:30:5"
																},
																"nativeSrc": "2809:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2809:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2796:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2796:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC1155_$270_to_t_address",
												"nativeSrc": "2710:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2766:5:5",
														"nodeType": "YulTypedName",
														"src": "2766:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2776:9:5",
														"nodeType": "YulTypedName",
														"src": "2776:9:5",
														"type": ""
													}
												],
												"src": "2710:142:5"
											},
											{
												"body": {
													"nativeSrc": "2939:82:5",
													"nodeType": "YulBlock",
													"src": "2939:82:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2956:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2956:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3008:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3008:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC1155_$270_to_t_address",
																			"nativeSrc": "2961:46:5",
																			"nodeType": "YulIdentifier",
																			"src": "2961:46:5"
																		},
																		"nativeSrc": "2961:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2961:53:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2949:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2949:6:5"
																},
																"nativeSrc": "2949:66:5",
																"nodeType": "YulFunctionCall",
																"src": "2949:66:5"
															},
															"nativeSrc": "2949:66:5",
															"nodeType": "YulExpressionStatement",
															"src": "2949:66:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC1155_$270_to_t_address_fromStack",
												"nativeSrc": "2858:163:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2927:5:5",
														"nodeType": "YulTypedName",
														"src": "2927:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2934:3:5",
														"nodeType": "YulTypedName",
														"src": "2934:3:5",
														"type": ""
													}
												],
												"src": "2858:163:5"
											},
											{
												"body": {
													"nativeSrc": "3141:140:5",
													"nodeType": "YulBlock",
													"src": "3141:140:5",
													"statements": [
														{
															"nativeSrc": "3151:26:5",
															"nodeType": "YulAssignment",
															"src": "3151:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3163:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3163:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3174:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3174:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3159:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3159:3:5"
																},
																"nativeSrc": "3159:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3159:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3151:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3151:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3247:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3247:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3260:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3260:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3271:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3271:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3256:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3256:3:5"
																		},
																		"nativeSrc": "3256:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3256:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC1155_$270_to_t_address_fromStack",
																	"nativeSrc": "3187:59:5",
																	"nodeType": "YulIdentifier",
																	"src": "3187:59:5"
																},
																"nativeSrc": "3187:87:5",
																"nodeType": "YulFunctionCall",
																"src": "3187:87:5"
															},
															"nativeSrc": "3187:87:5",
															"nodeType": "YulExpressionStatement",
															"src": "3187:87:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC1155_$270__to_t_address__fromStack_reversed",
												"nativeSrc": "3027:254:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3113:9:5",
														"nodeType": "YulTypedName",
														"src": "3113:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3125:6:5",
														"nodeType": "YulTypedName",
														"src": "3125:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3136:4:5",
														"nodeType": "YulTypedName",
														"src": "3136:4:5",
														"type": ""
													}
												],
												"src": "3027:254:5"
											},
											{
												"body": {
													"nativeSrc": "3352:53:5",
													"nodeType": "YulBlock",
													"src": "3352:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3369:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3369:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3392:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3392:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3374:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3374:17:5"
																		},
																		"nativeSrc": "3374:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3374:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3362:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3362:6:5"
																},
																"nativeSrc": "3362:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3362:37:5"
															},
															"nativeSrc": "3362:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3362:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3287:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3340:5:5",
														"nodeType": "YulTypedName",
														"src": "3340:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3347:3:5",
														"nodeType": "YulTypedName",
														"src": "3347:3:5",
														"type": ""
													}
												],
												"src": "3287:118:5"
											},
											{
												"body": {
													"nativeSrc": "3509:124:5",
													"nodeType": "YulBlock",
													"src": "3509:124:5",
													"statements": [
														{
															"nativeSrc": "3519:26:5",
															"nodeType": "YulAssignment",
															"src": "3519:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3531:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3531:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3542:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3542:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3527:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3527:3:5"
																},
																"nativeSrc": "3527:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3527:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3519:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3519:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3599:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3599:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3612:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3612:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3623:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3623:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3608:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3608:3:5"
																		},
																		"nativeSrc": "3608:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3608:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3555:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3555:43:5"
																},
																"nativeSrc": "3555:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3555:71:5"
															},
															"nativeSrc": "3555:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3555:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3411:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3481:9:5",
														"nodeType": "YulTypedName",
														"src": "3481:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3493:6:5",
														"nodeType": "YulTypedName",
														"src": "3493:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3504:4:5",
														"nodeType": "YulTypedName",
														"src": "3504:4:5",
														"type": ""
													}
												],
												"src": "3411:222:5"
											},
											{
												"body": {
													"nativeSrc": "3705:263:5",
													"nodeType": "YulBlock",
													"src": "3705:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3751:83:5",
																"nodeType": "YulBlock",
																"src": "3751:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3753:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3753:77:5"
																			},
																			"nativeSrc": "3753:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3753:79:5"
																		},
																		"nativeSrc": "3753:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3753:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3726:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3726:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3735:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3735:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3722:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3722:3:5"
																		},
																		"nativeSrc": "3722:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3722:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3747:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3747:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3718:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3718:3:5"
																},
																"nativeSrc": "3718:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3718:32:5"
															},
															"nativeSrc": "3715:119:5",
															"nodeType": "YulIf",
															"src": "3715:119:5"
														},
														{
															"nativeSrc": "3844:117:5",
															"nodeType": "YulBlock",
															"src": "3844:117:5",
															"statements": [
																{
																	"nativeSrc": "3859:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3859:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3873:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3873:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3863:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3863:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3888:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3888:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3923:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3923:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3934:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3934:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3919:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3919:3:5"
																				},
																				"nativeSrc": "3919:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3919:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3943:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3943:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3898:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3898:20:5"
																		},
																		"nativeSrc": "3898:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3898:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3888:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3888:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3639:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3675:9:5",
														"nodeType": "YulTypedName",
														"src": "3675:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3686:7:5",
														"nodeType": "YulTypedName",
														"src": "3686:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3698:6:5",
														"nodeType": "YulTypedName",
														"src": "3698:6:5",
														"type": ""
													}
												],
												"src": "3639:329:5"
											},
											{
												"body": {
													"nativeSrc": "4100:206:5",
													"nodeType": "YulBlock",
													"src": "4100:206:5",
													"statements": [
														{
															"nativeSrc": "4110:26:5",
															"nodeType": "YulAssignment",
															"src": "4110:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4122:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4122:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4133:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4133:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4118:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4118:3:5"
																},
																"nativeSrc": "4118:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4118:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4110:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4110:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4190:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4190:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4203:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4203:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4214:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4214:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4199:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4199:3:5"
																		},
																		"nativeSrc": "4199:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4199:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4146:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4146:43:5"
																},
																"nativeSrc": "4146:71:5",
																"nodeType": "YulFunctionCall",
																"src": "4146:71:5"
															},
															"nativeSrc": "4146:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "4146:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4271:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4271:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4284:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4284:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4295:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4295:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4280:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4280:3:5"
																		},
																		"nativeSrc": "4280:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4280:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4227:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4227:43:5"
																},
																"nativeSrc": "4227:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4227:72:5"
															},
															"nativeSrc": "4227:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4227:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3974:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4064:9:5",
														"nodeType": "YulTypedName",
														"src": "4064:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4076:6:5",
														"nodeType": "YulTypedName",
														"src": "4076:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4084:6:5",
														"nodeType": "YulTypedName",
														"src": "4084:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4095:4:5",
														"nodeType": "YulTypedName",
														"src": "4095:4:5",
														"type": ""
													}
												],
												"src": "3974:332:5"
											},
											{
												"body": {
													"nativeSrc": "4375:80:5",
													"nodeType": "YulBlock",
													"src": "4375:80:5",
													"statements": [
														{
															"nativeSrc": "4385:22:5",
															"nodeType": "YulAssignment",
															"src": "4385:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4400:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4400:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4394:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4394:5:5"
																},
																"nativeSrc": "4394:13:5",
																"nodeType": "YulFunctionCall",
																"src": "4394:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4385:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4385:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4443:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4443:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4416:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "4416:26:5"
																},
																"nativeSrc": "4416:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4416:33:5"
															},
															"nativeSrc": "4416:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "4416:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "4312:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4353:6:5",
														"nodeType": "YulTypedName",
														"src": "4353:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4361:3:5",
														"nodeType": "YulTypedName",
														"src": "4361:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4369:5:5",
														"nodeType": "YulTypedName",
														"src": "4369:5:5",
														"type": ""
													}
												],
												"src": "4312:143:5"
											},
											{
												"body": {
													"nativeSrc": "4538:274:5",
													"nodeType": "YulBlock",
													"src": "4538:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4584:83:5",
																"nodeType": "YulBlock",
																"src": "4584:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4586:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4586:77:5"
																			},
																			"nativeSrc": "4586:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4586:79:5"
																		},
																		"nativeSrc": "4586:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4586:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4559:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4559:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4568:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4568:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4555:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4555:3:5"
																		},
																		"nativeSrc": "4555:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4555:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4580:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4580:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4551:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4551:3:5"
																},
																"nativeSrc": "4551:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4551:32:5"
															},
															"nativeSrc": "4548:119:5",
															"nodeType": "YulIf",
															"src": "4548:119:5"
														},
														{
															"nativeSrc": "4677:128:5",
															"nodeType": "YulBlock",
															"src": "4677:128:5",
															"statements": [
																{
																	"nativeSrc": "4692:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4692:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4706:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4706:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4696:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4696:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4721:74:5",
																	"nodeType": "YulAssignment",
																	"src": "4721:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4767:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4767:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4778:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4778:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4763:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4763:3:5"
																				},
																				"nativeSrc": "4763:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4763:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4787:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4787:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4731:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "4731:31:5"
																		},
																		"nativeSrc": "4731:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4731:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4721:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4721:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4461:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4508:9:5",
														"nodeType": "YulTypedName",
														"src": "4508:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4519:7:5",
														"nodeType": "YulTypedName",
														"src": "4519:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4531:6:5",
														"nodeType": "YulTypedName",
														"src": "4531:6:5",
														"type": ""
													}
												],
												"src": "4461:351:5"
											},
											{
												"body": {
													"nativeSrc": "4871:32:5",
													"nodeType": "YulBlock",
													"src": "4871:32:5",
													"statements": [
														{
															"nativeSrc": "4881:16:5",
															"nodeType": "YulAssignment",
															"src": "4881:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "4892:5:5",
																"nodeType": "YulIdentifier",
																"src": "4892:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4881:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4881:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "4818:85:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4853:5:5",
														"nodeType": "YulTypedName",
														"src": "4853:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4863:7:5",
														"nodeType": "YulTypedName",
														"src": "4863:7:5",
														"type": ""
													}
												],
												"src": "4818:85:5"
											},
											{
												"body": {
													"nativeSrc": "4977:90:5",
													"nodeType": "YulBlock",
													"src": "4977:90:5",
													"statements": [
														{
															"nativeSrc": "4987:74:5",
															"nodeType": "YulAssignment",
															"src": "4987:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5053:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5053:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "5027:25:5",
																					"nodeType": "YulIdentifier",
																					"src": "5027:25:5"
																				},
																				"nativeSrc": "5027:32:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5027:32:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5018:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "5018:8:5"
																		},
																		"nativeSrc": "5018:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5018:42:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5000:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5000:17:5"
																},
																"nativeSrc": "5000:61:5",
																"nodeType": "YulFunctionCall",
																"src": "5000:61:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4987:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "4987:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint256",
												"nativeSrc": "4909:158:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4957:5:5",
														"nodeType": "YulTypedName",
														"src": "4957:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4967:9:5",
														"nodeType": "YulTypedName",
														"src": "4967:9:5",
														"type": ""
													}
												],
												"src": "4909:158:5"
											},
											{
												"body": {
													"nativeSrc": "5146:74:5",
													"nodeType": "YulBlock",
													"src": "5146:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5207:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5207:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint256",
																			"nativeSrc": "5168:38:5",
																			"nodeType": "YulIdentifier",
																			"src": "5168:38:5"
																		},
																		"nativeSrc": "5168:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:5"
																},
																"nativeSrc": "5156:58:5",
																"nodeType": "YulFunctionCall",
																"src": "5156:58:5"
															},
															"nativeSrc": "5156:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "5156:58:5"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
												"nativeSrc": "5073:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:5",
														"nodeType": "YulTypedName",
														"src": "5134:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:5",
														"nodeType": "YulTypedName",
														"src": "5141:3:5",
														"type": ""
													}
												],
												"src": "5073:147:5"
											},
											{
												"body": {
													"nativeSrc": "5321:73:5",
													"nodeType": "YulBlock",
													"src": "5321:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5338:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5338:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5343:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5343:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5331:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5331:6:5"
																},
																"nativeSrc": "5331:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5331:19:5"
															},
															"nativeSrc": "5331:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "5331:19:5"
														},
														{
															"nativeSrc": "5359:29:5",
															"nodeType": "YulAssignment",
															"src": "5359:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5378:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5378:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5383:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5383:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5374:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5374:3:5"
																},
																"nativeSrc": "5374:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5374:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5359:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "5359:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "5226:168:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5293:3:5",
														"nodeType": "YulTypedName",
														"src": "5293:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5298:6:5",
														"nodeType": "YulTypedName",
														"src": "5298:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5309:11:5",
														"nodeType": "YulTypedName",
														"src": "5309:11:5",
														"type": ""
													}
												],
												"src": "5226:168:5"
											},
											{
												"body": {
													"nativeSrc": "5506:8:5",
													"nodeType": "YulBlock",
													"src": "5506:8:5",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "5400:114:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5498:6:5",
														"nodeType": "YulTypedName",
														"src": "5498:6:5",
														"type": ""
													}
												],
												"src": "5400:114:5"
											},
											{
												"body": {
													"nativeSrc": "5665:217:5",
													"nodeType": "YulBlock",
													"src": "5665:217:5",
													"statements": [
														{
															"nativeSrc": "5675:72:5",
															"nodeType": "YulAssignment",
															"src": "5675:72:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5740:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5740:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5745:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5745:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "5682:57:5",
																	"nodeType": "YulIdentifier",
																	"src": "5682:57:5"
																},
																"nativeSrc": "5682:65:5",
																"nodeType": "YulFunctionCall",
																"src": "5682:65:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5675:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5675:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5845:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5845:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "5756:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "5756:88:5"
																},
																"nativeSrc": "5756:93:5",
																"nodeType": "YulFunctionCall",
																"src": "5756:93:5"
															},
															"nativeSrc": "5756:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "5756:93:5"
														},
														{
															"nativeSrc": "5858:18:5",
															"nodeType": "YulAssignment",
															"src": "5858:18:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5869:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5869:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5874:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5874:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5865:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5865:3:5"
																},
																"nativeSrc": "5865:11:5",
																"nodeType": "YulFunctionCall",
																"src": "5865:11:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5858:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5858:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "5520:362:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5653:3:5",
														"nodeType": "YulTypedName",
														"src": "5653:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5661:3:5",
														"nodeType": "YulTypedName",
														"src": "5661:3:5",
														"type": ""
													}
												],
												"src": "5520:362:5"
											},
											{
												"body": {
													"nativeSrc": "6178:585:5",
													"nodeType": "YulBlock",
													"src": "6178:585:5",
													"statements": [
														{
															"nativeSrc": "6188:27:5",
															"nodeType": "YulAssignment",
															"src": "6188:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6200:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6200:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6211:3:5",
																		"nodeType": "YulLiteral",
																		"src": "6211:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6196:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6196:3:5"
																},
																"nativeSrc": "6196:19:5",
																"nodeType": "YulFunctionCall",
																"src": "6196:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6188:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6188:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6269:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6269:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6282:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6282:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6293:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6293:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6278:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6278:3:5"
																		},
																		"nativeSrc": "6278:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6278:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6225:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6225:43:5"
																},
																"nativeSrc": "6225:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6225:71:5"
															},
															"nativeSrc": "6225:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6225:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6350:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6350:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6363:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6363:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6374:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6374:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6359:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6359:3:5"
																		},
																		"nativeSrc": "6359:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6359:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6306:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6306:43:5"
																},
																"nativeSrc": "6306:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6306:72:5"
															},
															"nativeSrc": "6306:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6306:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6432:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6432:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6445:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6445:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6456:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6456:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6441:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6441:3:5"
																		},
																		"nativeSrc": "6441:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6441:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6388:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6388:43:5"
																},
																"nativeSrc": "6388:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6388:72:5"
															},
															"nativeSrc": "6388:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6388:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6522:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6522:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6535:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6535:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6546:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6546:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6531:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6531:3:5"
																		},
																		"nativeSrc": "6531:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6531:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "6470:51:5",
																	"nodeType": "YulIdentifier",
																	"src": "6470:51:5"
																},
																"nativeSrc": "6470:80:5",
																"nodeType": "YulFunctionCall",
																"src": "6470:80:5"
															},
															"nativeSrc": "6470:80:5",
															"nodeType": "YulExpressionStatement",
															"src": "6470:80:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6571:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6571:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6582:3:5",
																				"nodeType": "YulLiteral",
																				"src": "6582:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6567:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6567:3:5"
																		},
																		"nativeSrc": "6567:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6567:19:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6592:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6592:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6598:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6598:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6588:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6588:3:5"
																		},
																		"nativeSrc": "6588:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6588:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6560:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:5"
																},
																"nativeSrc": "6560:49:5",
																"nodeType": "YulFunctionCall",
																"src": "6560:49:5"
															},
															"nativeSrc": "6560:49:5",
															"nodeType": "YulExpressionStatement",
															"src": "6560:49:5"
														},
														{
															"nativeSrc": "6618:138:5",
															"nodeType": "YulAssignment",
															"src": "6618:138:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6751:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6751:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "6626:123:5",
																	"nodeType": "YulIdentifier",
																	"src": "6626:123:5"
																},
																"nativeSrc": "6626:130:5",
																"nodeType": "YulFunctionCall",
																"src": "6626:130:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6618:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6618:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "5888:875:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6126:9:5",
														"nodeType": "YulTypedName",
														"src": "6126:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6138:6:5",
														"nodeType": "YulTypedName",
														"src": "6138:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6146:6:5",
														"nodeType": "YulTypedName",
														"src": "6146:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6154:6:5",
														"nodeType": "YulTypedName",
														"src": "6154:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6162:6:5",
														"nodeType": "YulTypedName",
														"src": "6162:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6173:4:5",
														"nodeType": "YulTypedName",
														"src": "6173:4:5",
														"type": ""
													}
												],
												"src": "5888:875:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC1155_$270_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC1155_$270_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC1155_$270_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC1155_$270__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC1155_$270_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610060575f3560e01c80631702749e1461006457806342966c681461009457806355a373d6146100b0578063715018a6146100ce5780638da5cb5b146100d8578063f2fde38b146100f6575b5f80fd5b61007e60048036038101906100799190610509565b610112565b60405161008b9190610556565b60405180910390f35b6100ae60048036038101906100a9919061056f565b6101b5565b005b6100b8610246565b6040516100c591906105f5565b60405180910390f35b6100d661026b565b005b6100e061027e565b6040516100ed919061061d565b60405180910390f35b610110600480360381019061010b9190610636565b6102a5565b005b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e84846040518363ffffffff1660e01b815260040161016e929190610661565b602060405180830381865afa158015610189573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101ad919061069c565b905092915050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a33308460016040518563ffffffff1660e01b81526004016102169493929190610733565b5f604051808303815f87803b15801561022d575f80fd5b505af115801561023f573d5f803e3d5ffd5b5050505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610273610329565b61027c5f6103b0565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102ad610329565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361031d575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610314919061061d565b60405180910390fd5b610326816103b0565b50565b610331610471565b73ffffffffffffffffffffffffffffffffffffffff1661034f61027e565b73ffffffffffffffffffffffffffffffffffffffff16146103ae57610372610471565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016103a5919061061d565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104a58261047c565b9050919050565b6104b58161049b565b81146104bf575f80fd5b50565b5f813590506104d0816104ac565b92915050565b5f819050919050565b6104e8816104d6565b81146104f2575f80fd5b50565b5f81359050610503816104df565b92915050565b5f806040838503121561051f5761051e610478565b5b5f61052c858286016104c2565b925050602061053d858286016104f5565b9150509250929050565b610550816104d6565b82525050565b5f6020820190506105695f830184610547565b92915050565b5f6020828403121561058457610583610478565b5b5f610591848285016104f5565b91505092915050565b5f819050919050565b5f6105bd6105b86105b38461047c565b61059a565b61047c565b9050919050565b5f6105ce826105a3565b9050919050565b5f6105df826105c4565b9050919050565b6105ef816105d5565b82525050565b5f6020820190506106085f8301846105e6565b92915050565b6106178161049b565b82525050565b5f6020820190506106305f83018461060e565b92915050565b5f6020828403121561064b5761064a610478565b5b5f610658848285016104c2565b91505092915050565b5f6040820190506106745f83018561060e565b6106816020830184610547565b9392505050565b5f81519050610696816104df565b92915050565b5f602082840312156106b1576106b0610478565b5b5f6106be84828501610688565b91505092915050565b5f819050919050565b5f6106ea6106e56106e0846106c7565b61059a565b6104d6565b9050919050565b6106fa816106d0565b82525050565b5f82825260208201905092915050565b50565b5f61071e5f83610700565b915061072982610710565b5f82019050919050565b5f60a0820190506107465f83018761060e565b610753602083018661060e565b6107606040830185610547565b61076d60608301846106f1565b818103608083015261077e81610713565b90509594505050505056fea2646970667358221220cab299aaf1a346f32b8cd83743a6d0473eed59af0de4c51b9b371d946639475564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1702749E EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x55A373D6 EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF6 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x509 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB8 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0x26B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE0 PUSH2 0x27E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E SWAP3 SWAP2 SWAP1 PUSH2 0x661 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x189 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A CALLER ADDRESS DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x216 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x733 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x273 PUSH2 0x329 JUMP JUMPDEST PUSH2 0x27C PUSH0 PUSH2 0x3B0 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x329 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x31D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x3B0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x331 PUSH2 0x471 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x34F PUSH2 0x27E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3AE JUMPI PUSH2 0x372 PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4A5 DUP3 PUSH2 0x47C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B5 DUP2 PUSH2 0x49B JUMP JUMPDEST DUP2 EQ PUSH2 0x4BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4D0 DUP2 PUSH2 0x4AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E8 DUP2 PUSH2 0x4D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x503 DUP2 PUSH2 0x4DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0x478 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x52C DUP6 DUP3 DUP7 ADD PUSH2 0x4C2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x53D DUP6 DUP3 DUP7 ADD PUSH2 0x4F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x550 DUP2 PUSH2 0x4D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x569 PUSH0 DUP4 ADD DUP5 PUSH2 0x547 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x584 JUMPI PUSH2 0x583 PUSH2 0x478 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x591 DUP5 DUP3 DUP6 ADD PUSH2 0x4F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5BD PUSH2 0x5B8 PUSH2 0x5B3 DUP5 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH2 0x47C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5CE DUP3 PUSH2 0x5A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5DF DUP3 PUSH2 0x5C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EF DUP2 PUSH2 0x5D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x608 PUSH0 DUP4 ADD DUP5 PUSH2 0x5E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x617 DUP2 PUSH2 0x49B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x630 PUSH0 DUP4 ADD DUP5 PUSH2 0x60E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64B JUMPI PUSH2 0x64A PUSH2 0x478 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x658 DUP5 DUP3 DUP6 ADD PUSH2 0x4C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x674 PUSH0 DUP4 ADD DUP6 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x681 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x547 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x696 DUP2 PUSH2 0x4DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B1 JUMPI PUSH2 0x6B0 PUSH2 0x478 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6BE DUP5 DUP3 DUP6 ADD PUSH2 0x688 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6EA PUSH2 0x6E5 PUSH2 0x6E0 DUP5 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST PUSH2 0x4D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FA DUP2 PUSH2 0x6D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x71E PUSH0 DUP4 PUSH2 0x700 JUMP JUMPDEST SWAP2 POP PUSH2 0x729 DUP3 PUSH2 0x710 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x746 PUSH0 DUP4 ADD DUP8 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x753 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x760 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x547 JUMP JUMPDEST PUSH2 0x76D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6F1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x77E DUP2 PUSH2 0x713 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xB2 SWAP10 0xAA CALL LOG3 CHAINID RETURN 0x2B DUP13 0xD8 CALLDATACOPY NUMBER 0xA6 0xD0 SELFBALANCE RETURNDATACOPY 0xED MSIZE 0xAF 0xD 0xE4 0xC5 SHL SWAP12 CALLDATACOPY SAR SWAP5 PUSH7 0x39475564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "173:633:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;446:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;661:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;212:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;446:145:4;522:7;548:13;;;;;;;;;;;:23;;;572:7;581:2;548:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;541:43;;446:145;;;;:::o;661:143::-;706:13;;;;;;;;;;;:30;;;737:10;757:4;764:2;768:1;706:68;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;661:143;:::o;212:29::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2543:215::-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:60::-;2392:3;2413:5;2406:12;;2364:60;;;:::o;2430:142::-;2480:9;2513:53;2531:34;2540:24;2558:5;2540:24;:::i;:::-;2531:34;:::i;:::-;2513:53;:::i;:::-;2500:66;;2430:142;;;:::o;2578:126::-;2628:9;2661:37;2692:5;2661:37;:::i;:::-;2648:50;;2578:126;;;:::o;2710:142::-;2776:9;2809:37;2840:5;2809:37;:::i;:::-;2796:50;;2710:142;;;:::o;2858:163::-;2961:53;3008:5;2961:53;:::i;:::-;2956:3;2949:66;2858:163;;:::o;3027:254::-;3136:4;3174:2;3163:9;3159:18;3151:26;;3187:87;3271:1;3260:9;3256:17;3247:6;3187:87;:::i;:::-;3027:254;;;;:::o;3287:118::-;3374:24;3392:5;3374:24;:::i;:::-;3369:3;3362:37;3287:118;;:::o;3411:222::-;3504:4;3542:2;3531:9;3527:18;3519:26;;3555:71;3623:1;3612:9;3608:17;3599:6;3555:71;:::i;:::-;3411:222;;;;:::o;3639:329::-;3698:6;3747:2;3735:9;3726:7;3722:23;3718:32;3715:119;;;3753:79;;:::i;:::-;3715:119;3873:1;3898:53;3943:7;3934:6;3923:9;3919:22;3898:53;:::i;:::-;3888:63;;3844:117;3639:329;;;;:::o;3974:332::-;4095:4;4133:2;4122:9;4118:18;4110:26;;4146:71;4214:1;4203:9;4199:17;4190:6;4146:71;:::i;:::-;4227:72;4295:2;4284:9;4280:18;4271:6;4227:72;:::i;:::-;3974:332;;;;;:::o;4312:143::-;4369:5;4400:6;4394:13;4385:22;;4416:33;4443:5;4416:33;:::i;:::-;4312:143;;;;:::o;4461:351::-;4531:6;4580:2;4568:9;4559:7;4555:23;4551:32;4548:119;;;4586:79;;:::i;:::-;4548:119;4706:1;4731:64;4787:7;4778:6;4767:9;4763:22;4731:64;:::i;:::-;4721:74;;4677:128;4461:351;;;;:::o;4818:85::-;4863:7;4892:5;4881:16;;4818:85;;;:::o;4909:158::-;4967:9;5000:61;5018:42;5027:32;5053:5;5027:32;:::i;:::-;5018:42;:::i;:::-;5000:61;:::i;:::-;4987:74;;4909:158;;;:::o;5073:147::-;5168:45;5207:5;5168:45;:::i;:::-;5163:3;5156:58;5073:147;;:::o;5226:168::-;5309:11;5343:6;5338:3;5331:19;5383:4;5378:3;5374:14;5359:29;;5226:168;;;;:::o;5400:114::-;;:::o;5520:362::-;5661:3;5682:65;5745:1;5740:3;5682:65;:::i;:::-;5675:72;;5756:93;5845:3;5756:93;:::i;:::-;5874:1;5869:3;5865:11;5858:18;;5520:362;;;:::o;5888:875::-;6173:4;6211:3;6200:9;6196:19;6188:27;;6225:71;6293:1;6282:9;6278:17;6269:6;6225:71;:::i;:::-;6306:72;6374:2;6363:9;6359:18;6350:6;6306:72;:::i;:::-;6388;6456:2;6445:9;6441:18;6432:6;6388:72;:::i;:::-;6470:80;6546:2;6535:9;6531:18;6522:6;6470:80;:::i;:::-;6598:9;6592:4;6588:20;6582:3;6571:9;6567:19;6560:49;6626:130;6751:4;6626:130;:::i;:::-;6618:138;;5888:875;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "396600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"burn(uint256)": "infinite",
								"owner()": "2581",
								"renounceOwnership()": "infinite",
								"tokenBalanceOf(address,uint256)": "infinite",
								"tokenContract()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 173,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 173,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 173,
									"end": 806,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 248,
									"end": 361,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 248,
									"end": 361,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 248,
									"end": 361,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 248,
									"end": 361,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 248,
									"end": 361,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 248,
									"end": 361,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 248,
									"end": 361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 248,
									"end": 361,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 292,
									"end": 302,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 339,
									"end": 353,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 314,
									"end": 327,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 314,
									"end": 327,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 314,
									"end": 354,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 248,
									"end": 361,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 173,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 173,
									"end": 806,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 173,
									"end": 806,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 173,
									"end": 806,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 173,
									"end": 806,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 806,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 173,
									"end": 806,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 806,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 173,
									"end": 806,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 806,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cab299aaf1a346f32b8cd83743a6d0473eed59af0de4c51b9b371d946639475564736f6c634300081a0033",
									".code": [
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH",
											"source": 4,
											"value": "1702749E"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH",
											"source": 4,
											"value": "42966C68"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH",
											"source": 4,
											"value": "55A373D6"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 806,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 173,
											"end": 806,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 446,
											"end": 591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 446,
											"end": 591,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 446,
											"end": 591,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 446,
											"end": 591,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 446,
											"end": 591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 446,
											"end": 591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 446,
											"end": 591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 446,
											"end": 591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 591,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 446,
											"end": 591,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 446,
											"end": 591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 446,
											"end": 591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 591,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 661,
											"end": 804,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 661,
											"end": 804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 661,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 661,
											"end": 804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 661,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 661,
											"end": 804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 212,
											"end": 241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 591,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 446,
											"end": 591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 522,
											"end": 529,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 548,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 561,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 548,
											"end": 561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 548,
											"end": 561,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 548,
											"end": 561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 561,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 548,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 548,
											"end": 561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 548,
											"end": 571,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 548,
											"end": 571,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 548,
											"end": 571,
											"name": "PUSH",
											"source": 4,
											"value": "FDD58E"
										},
										{
											"begin": 572,
											"end": 579,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 581,
											"end": 583,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 548,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 548,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 548,
											"end": 584,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 548,
											"end": 584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 541,
											"end": 584,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 541,
											"end": 584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 446,
											"end": 591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 661,
											"end": 804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 706,
											"end": 719,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 706,
											"end": 719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 719,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 706,
											"end": 719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 719,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 706,
											"end": 719,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 706,
											"end": 719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 719,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 706,
											"end": 719,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 706,
											"end": 719,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 706,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 706,
											"end": 736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 706,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "F242432A"
										},
										{
											"begin": 737,
											"end": 747,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 757,
											"end": 761,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 764,
											"end": 766,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 768,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 706,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 706,
											"end": 774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 706,
											"end": 774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 661,
											"end": 804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 212,
											"end": 241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2143,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2424,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2364,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2424,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2424,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2572,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2430,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2531,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2558,
											"end": 2563,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2540,
											"end": 2564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2531,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2565,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2531,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2513,
											"end": 2566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2572,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2704,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2578,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2628,
											"end": 2637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2692,
											"end": 2697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2661,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2852,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2710,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2840,
											"end": 2845,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2809,
											"end": 2846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2846,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2809,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2796,
											"end": 2846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2852,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2852,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 3021,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2858,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3008,
											"end": 3013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2961,
											"end": 3014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2961,
											"end": 3014,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2961,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2956,
											"end": 2959,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2949,
											"end": 3015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 3021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 3021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 3021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3281,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3027,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3176,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3163,
											"end": 3172,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3177,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3271,
											"end": 3272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3269,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3256,
											"end": 3273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3253,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3187,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3274,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3187,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3281,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3405,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3287,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3392,
											"end": 3397,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3374,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3398,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3374,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3362,
											"end": 3399,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3633,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3411,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3544,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3531,
											"end": 3540,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3545,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3519,
											"end": 3545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3519,
											"end": 3545,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3555,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3623,
											"end": 3624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3621,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3608,
											"end": 3625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3599,
											"end": 3605,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3555,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3555,
											"end": 3626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3555,
											"end": 3626,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3555,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3633,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3633,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3639,
											"end": 3968,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3639,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 3704,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3749,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3744,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3726,
											"end": 3733,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3745,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3750,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3715,
											"end": 3834,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3715,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3715,
											"end": 3834,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3753,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3753,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3753,
											"end": 3832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3753,
											"end": 3832,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3753,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3715,
											"end": 3834,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3715,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 3874,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3943,
											"end": 3950,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3940,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3932,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 3941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3898,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3898,
											"end": 3951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3898,
											"end": 3951,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3898,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 3951,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 3951,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3844,
											"end": 3961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3639,
											"end": 3968,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3639,
											"end": 3968,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3639,
											"end": 3968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3639,
											"end": 3968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3639,
											"end": 3968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4306,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3974,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4095,
											"end": 4099,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4135,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4131,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4110,
											"end": 4136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4110,
											"end": 4136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4146,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4214,
											"end": 4215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4212,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4196,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4146,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4146,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4146,
											"end": 4217,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4146,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4227,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4295,
											"end": 4297,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4284,
											"end": 4293,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4277,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4227,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 4227,
											"end": 4299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4227,
											"end": 4299,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4227,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4306,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4306,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4312,
											"end": 4455,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4312,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4400,
											"end": 4406,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4407,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4416,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4443,
											"end": 4448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4416,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4416,
											"end": 4449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4416,
											"end": 4449,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4416,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4312,
											"end": 4455,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4312,
											"end": 4455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4312,
											"end": 4455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4312,
											"end": 4455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4312,
											"end": 4455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4812,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 4461,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4531,
											"end": 4537,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4580,
											"end": 4582,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4568,
											"end": 4577,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4559,
											"end": 4566,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4555,
											"end": 4578,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4583,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 4667,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4548,
											"end": 4667,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4586,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 4586,
											"end": 4665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4665,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4586,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 4667,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4548,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4787,
											"end": 4794,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4778,
											"end": 4784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4731,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4731,
											"end": 4795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4731,
											"end": 4795,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4731,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4795,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 4805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4812,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4812,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4818,
											"end": 4903,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4818,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4863,
											"end": 4870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4892,
											"end": 4897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 4897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 4897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4818,
											"end": 4903,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4818,
											"end": 4903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4818,
											"end": 4903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4818,
											"end": 4903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 5067,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4909,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 4976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5000,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5018,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5027,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5053,
											"end": 5058,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 5027,
											"end": 5059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5059,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5027,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5018,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 5018,
											"end": 5060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5018,
											"end": 5060,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5018,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 5000,
											"end": 5061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5061,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5000,
											"end": 5061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5061,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5061,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 5067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 5067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 5067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4909,
											"end": 5067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5220,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 5073,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5168,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5207,
											"end": 5212,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5168,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5168,
											"end": 5213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5168,
											"end": 5213,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5168,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5156,
											"end": 5214,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5226,
											"end": 5394,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 5226,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5309,
											"end": 5320,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5343,
											"end": 5349,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5331,
											"end": 5350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5378,
											"end": 5381,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5226,
											"end": 5394,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5226,
											"end": 5394,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5226,
											"end": 5394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5226,
											"end": 5394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5226,
											"end": 5394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5514,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5400,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5400,
											"end": 5514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5520,
											"end": 5882,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 5520,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5661,
											"end": 5664,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5682,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 5745,
											"end": 5746,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5740,
											"end": 5743,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5682,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 5682,
											"end": 5747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5682,
											"end": 5747,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 5682,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5675,
											"end": 5747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5675,
											"end": 5747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5756,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 5845,
											"end": 5848,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5756,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5756,
											"end": 5849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5756,
											"end": 5849,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 5756,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5872,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5876,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5520,
											"end": 5882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5520,
											"end": 5882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5520,
											"end": 5882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5520,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 6763,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 5888,
											"end": 6763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6214,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 6200,
											"end": 6209,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6196,
											"end": 6215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6188,
											"end": 6215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6188,
											"end": 6215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6291,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6278,
											"end": 6295,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6269,
											"end": 6275,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6225,
											"end": 6296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6296,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6225,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6374,
											"end": 6376,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6363,
											"end": 6372,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6350,
											"end": 6356,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6306,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6378,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6306,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6388,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6456,
											"end": 6458,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6445,
											"end": 6454,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6441,
											"end": 6459,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6432,
											"end": 6438,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6388,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 6388,
											"end": 6460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6388,
											"end": 6460,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6388,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6470,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6546,
											"end": 6548,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6535,
											"end": 6544,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6531,
											"end": 6549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6470,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 6470,
											"end": 6550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6470,
											"end": 6550,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6470,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6607,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6588,
											"end": 6608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6582,
											"end": 6585,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6567,
											"end": 6586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6560,
											"end": 6609,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6626,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6751,
											"end": 6755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6626,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 6626,
											"end": 6756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6626,
											"end": 6756,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6626,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6618,
											"end": 6756,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6618,
											"end": 6756,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 6763,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 6763,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 6763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 6763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 6763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 6763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 6763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 6763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"module-3 deliverables/forging_logic_contract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"burn(uint256)": "42966c68",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"tokenBalanceOf(address,uint256)": "1702749e",
							"tokenContract()": "55a373d6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"module-3 deliverables/forging_logic_contract.sol\":\"ForgingLogic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"module-3 deliverables/forging_logic_contract.sol\":{\"keccak256\":\"0x8d270cb83d69434511bd2777c7cb053d7c3450d49422e4c5c23710062e5d49d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66ecee044b5932975ebe31d78d888c7619f3fbeabb83e3d483ced7eec7c102a2\",\"dweb:/ipfs/QmbG8HxwhfE7sh5cTVMeHYoH7vyCd3EDWQgQfAdEYP8vhS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "module-3 deliverables/forging_logic_contract.sol:ForgingLogic",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 321,
								"contract": "module-3 deliverables/forging_logic_contract.sol:ForgingLogic",
								"label": "tokenContract",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC1155)270"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC1155)270": {
								"encoding": "inplace",
								"label": "contract IERC1155",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							300
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 301,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 300,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 300,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								300
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							270
						],
						"IERC165": [
							312
						]
					},
					"id": 271,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 271,
							"sourceUnit": 313,
							"src": "136:62:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 312,
										"src": "144:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 153,
										"name": "IERC165",
										"nameLocations": [
											"359:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 312,
										"src": "359:7:1"
									},
									"id": 154,
									"nodeType": "InheritanceSpecifier",
									"src": "359:7:1"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 152,
								"nodeType": "StructuredDocumentation",
								"src": "200:136:1",
								"text": " @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."
							},
							"fullyImplemented": false,
							"id": 270,
							"linearizedBaseContracts": [
								270,
								312
							],
							"name": "IERC1155",
							"nameLocation": "347:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "373:125:1",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 167,
									"name": "TransferSingle",
									"nameLocation": "509:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "540:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "524:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "566:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "550:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "588:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "572:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "600:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "592:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "612:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "604:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "523:95:1"
									},
									"src": "503:116:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "625:144:1",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 182,
									"name": "TransferBatch",
									"nameLocation": "780:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "819:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "803:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "853:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "837:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "883:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "867:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "905:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "895:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 175,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "895:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 176,
													"nodeType": "ArrayTypeName",
													"src": "895:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "928:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "918:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 178,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "918:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 179,
													"nodeType": "ArrayTypeName",
													"src": "918:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:147:1"
									},
									"src": "774:167:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "947:147:1",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 191,
									"name": "ApprovalForAll",
									"nameLocation": "1105:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1136:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1120:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1145:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1176:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1171:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:66:1"
									},
									"src": "1099:87:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "1192:343:1",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 198,
									"name": "URI",
									"nameLocation": "1546:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1557:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1550:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1550:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1580:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1564:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:34:1"
									},
									"src": "1540:44:1"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "1590:90:1",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`."
									},
									"functionSelector": "00fdd58e",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1694:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1712:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1704:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1704:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1729:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1721:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1703:29:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1756:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:9:1"
									},
									"scope": 270,
									"src": "1685:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "1771:188:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1973:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1997:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 210,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1997:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 211,
													"nodeType": "ArrayTypeName",
													"src": "1997:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2053:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2034:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 213,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2034:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 214,
													"nodeType": "ArrayTypeName",
													"src": "2034:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:75:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2086:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 217,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 218,
													"nodeType": "ArrayTypeName",
													"src": "2086:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:18:1"
									},
									"scope": 270,
									"src": "1964:140:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2110:254:1",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"functionSelector": "a22cb465",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2378:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2404:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2396:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2419:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2414:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2414:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2395:33:1"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2437:0:1"
									},
									"scope": 270,
									"src": "2369:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "2444:135:1",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2593:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2610:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2610:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2635:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2627:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2609:35:1"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2668:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2668:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:6:1"
									},
									"scope": 270,
									"src": "2584:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "2680:910:1",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3604:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3629:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "3621:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3621:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3643:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "3635:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3655:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "3647:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3647:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3667:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "3659:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3659:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3689:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "3674:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3674:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3620:74:1"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3703:0:1"
									},
									"scope": 270,
									"src": "3595:109:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "3710:814:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4538:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4577:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4569:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4569:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4599:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4591:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4630:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4611:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 259,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4611:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 260,
													"nodeType": "ArrayTypeName",
													"src": "4611:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4643:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 262,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4643:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 263,
													"nodeType": "ArrayTypeName",
													"src": "4643:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4693:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4678:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4678:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4559:144:1"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4712:0:1"
									},
									"scope": 270,
									"src": "4529:184:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 271,
							"src": "337:4378:1",
							"usedErrors": [],
							"usedEvents": [
								167,
								182,
								191,
								198
							]
						}
					],
					"src": "110:4606:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							300
						]
					},
					"id": 301,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 272,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 273,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 300,
							"linearizedBaseContracts": [
								300
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 278,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 277,
												"id": 280,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 300,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 287,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 286,
												"id": 289,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 300,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 295,
												"id": 297,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 300,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 301,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							312
						]
					},
					"id": 313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 302,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 303,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:3",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 312,
							"linearizedBaseContracts": [
								312
							],
							"name": "IERC165",
							"nameLocation": "432:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "818:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 305,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:3"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "861:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:3"
									},
									"scope": 312,
									"src": "791:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 313,
							"src": "422:447:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:3"
				},
				"id": 3
			},
			"module-3 deliverables/forging_logic_contract.sol": {
				"ast": {
					"absolutePath": "module-3 deliverables/forging_logic_contract.sol",
					"exportedSymbols": {
						"Context": [
							300
						],
						"ForgingLogic": [
							374
						],
						"IERC1155": [
							270
						],
						"IERC165": [
							312
						],
						"Ownable": [
							147
						]
					},
					"id": 375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 315,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 375,
							"sourceUnit": 271,
							"src": "58:60:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 375,
							"sourceUnit": 148,
							"src": "119:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 317,
										"name": "Ownable",
										"nameLocations": [
											"198:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "198:7:4"
									},
									"id": 318,
									"nodeType": "InheritanceSpecifier",
									"src": "198:7:4"
								}
							],
							"canonicalName": "ForgingLogic",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 374,
							"linearizedBaseContracts": [
								374,
								147,
								300
							],
							"name": "ForgingLogic",
							"nameLocation": "182:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "55a373d6",
									"id": 321,
									"mutability": "mutable",
									"name": "tokenContract",
									"nameLocation": "228:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 374,
									"src": "212:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1155_$270",
										"typeString": "contract IERC1155"
									},
									"typeName": {
										"id": 320,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 319,
											"name": "IERC1155",
											"nameLocations": [
												"212:8:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 270,
											"src": "212:8:4"
										},
										"referencedDeclaration": 270,
										"src": "212:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155_$270",
											"typeString": "contract IERC1155"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "304:57:4",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 330,
														"name": "tokenContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "314:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$270",
															"typeString": "contract IERC1155"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 332,
																"name": "_tokenContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "339:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 331,
															"name": "IERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "330:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1155_$270_$",
																"typeString": "type(contract IERC1155)"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "330:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$270",
															"typeString": "contract IERC1155"
														}
													},
													"src": "314:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1155_$270",
														"typeString": "contract IERC1155"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "314:40:4"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 326,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "292:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "296:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "292:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 328,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 325,
												"name": "Ownable",
												"nameLocations": [
													"284:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "284:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "284:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "_tokenContract",
												"nameLocation": "268:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "260:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "259:24:4"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "304:0:4"
									},
									"scope": 374,
									"src": "248:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "531:60:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "572:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 349,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "581:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 346,
															"name": "tokenContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "548:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$270",
																"typeString": "contract IERC1155"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "562:9:4",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "548:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view external returns (uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "548:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 345,
												"id": 351,
												"nodeType": "Return",
												"src": "541:43:4"
											}
										]
									},
									"functionSelector": "1702749e",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenBalanceOf",
									"nameLocation": "455:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "478:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "470:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "495:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "487:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:29:4"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "522:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:9:4"
									},
									"scope": 374,
									"src": "446:145:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "696:108:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 361,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "737:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "741:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "737:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 365,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "757:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ForgingLogic_$374",
																		"typeString": "contract ForgingLogic"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ForgingLogic_$374",
																		"typeString": "contract ForgingLogic"
																	}
																],
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "749:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 363,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "749:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "749:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 367,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "764:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "768:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "771:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"id": 358,
															"name": "tokenContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "706:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$270",
																"typeString": "contract IERC1155"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "720:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "706:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "706:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "706:68:4"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "670:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "683:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "675:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:12:4"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "696:0:4"
									},
									"scope": 374,
									"src": "661:143:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 375,
							"src": "173:633:4",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "32:774:4"
				},
				"id": 4
			}
		}
	}
}